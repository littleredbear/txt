
数据结构：数据和数据之间的联系组成了数据结构。假设D表示数据。S表示联系。那么DS={D,S}表示数据结构。

关系表：
	表中的行被看作是文件中的记录，表中的列被看作是这些记录的字段。

实体与联系：
	眼下已有的工程；在这些工程中所使用的零件。提供零件的供应商。存储零件的仓库。等等。除了基本实体本身（供应商，零件等），还有连接这些基本实体的联系。例如。供应商供应某些零件。反过来，每个零件都由某些供应商提供。

	表中的大部分联系是涉及两个表的，也就是而元关系。涉及三个实体类型，是一个三元关系。这个三元关系表示某些供应商为某些工程供应某些零件。和下面三个二元关系的联合是不同的，即“供应商供应零件”，“零件用于工程”，“工程由供应商供应”。
	例子：a。史密斯给曼哈顿工程提供活动扳手。
		  b。史密斯供应活动扳手。
		  c。活动扳手用于曼哈顿工程。
		  d。曼哈顿工程由史密斯供应。
	即。不能由b,c,d。推出a。
通常只把联系当作一种特殊的实体。

属性：
	实体是具有有用信息的对象。实体（包括联系）具有属性。属性记录实体的相应信息。

数据和数据模型：
	将数据转换成符号语言记录。对符号进行操作。
	数据模型是对对象，操作等的一个抽象的自包含的逻辑定义，这些定义合起来构成了一个面对用户的抽象机。其中对象可以用来建模数据结构。操作符用于建模一些行为。

在数据库系统中，应尽可能避免应用程序依赖于数据的情况。

存储字段：
	简言之，就是存储数据的最小单位。数据库中对每一种类型的存储字段都包含许多具体值。例如，包含不同类型零件信息的数据库可能包括称为零件数目的存储字段类型，那么对每种零件，即有一个该存储字段的具体值。

存储记录:
	存储记录是相关的存储字段的集合。

存储文件是由现存的一种类型的存储记录的值组成。
存储文件的结构: 一指定的存储文件可以各种方式实现其存储。例如，它可以完全存储在单个的存储设备上，或者存储在几个设备上。

关系系统：
	1)数据以表的形式呈现给用户；
	2)提供给用户的操作以表为操作对象。

1.二元联系：			涉及两个表的联系
2.命令驱动界面：		使用查询语言命令与数据库交互的界面	
3.并发访问:				不用用户可以同时访问同一数据
4.数据管理:				利用计算机硬件和软件技术对数据进行有效的收集，存储，处理和应用的过程
5.数据库:				数据库是一个持久数据的集合，这些数据用于某企业的应用系统中
6.数据库系统:			用计算机存储记录的系统。包括数据，硬件，软件和用户
7.数据独立性:			数据独立性包括物理独立性和逻辑独立性。应用程序不会因物理表示和访问技术的改变而改变。
8.数据库管理系统:		处理访问数据库的请求。
9.数据库管理员:			负责执行数据管理员的决定的技术人员
10.实体:				数据库中表示的任何可区分的事物,具有有用信息的对象。
11.实体/联系图:			除了基本实体本身，还有连接这些基本实体的联系。这些联系通过菱形和连线表示。
12.表格驱动界面:		通过选择菜单中的一项或填充表格中的一栏来管理数据库的界面
13.集成:				数据库可以被当作几个不同文件的合并。
14.完整性:				确保数据库中的数据是正确的。同样事实的两条记录的不一致，是缺少完整性的例子。
15.菜单驱动界面:		同表格驱动界面
16.多用户系统:			相对于但用户系统。可以同时有多个用户访问数据库系统。
17.联机应用程序:		允许最终用户通过联机工作站或终端访问数据库。
18.持久数据:			数据库中的数据通常被认为是持久存储的。一旦数据进入数据库被DBMS接受，就只有向DBMS提出某些明确的请求时，才能从数据库中删除数据。
19.属性:				实体具有属性，这些属性记录实体的相应信息。
20.查询语言:			数据库请求指令
21.冗余:				多余的重复的数据
22.安全性:				确保访问数据库的唯一方式时通过正确的通道。
23.共享:				不同的用户可以同时访问
24.存储字段:			存储数据的最小单元	
25.存储文件:			由现存的一种类型的存储记录的值组成。	
26.事务:				逻辑工作单元，包括一些数据库操作。











